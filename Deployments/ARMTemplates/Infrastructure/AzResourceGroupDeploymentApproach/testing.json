{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "West Europe",
      "metadata": {
        "description": "Geographic Location for all resources."
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "AssessmentVNetTesting",
      "metadata": {
        "description": "Sentia Wordpress Assesment Vnet"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/8",
      "metadata": {
        "description": "Address prefix"
      }
    },
    "subnet1Prefix": {
      "type": "string",
      "defaultValue": "10.240.0.0/16",
      "metadata": {
        "description": "AKS Subnet"
      }
    },
    "subnet1Name": {
      "type": "string",
      "defaultValue": "aks-subnet",
      "metadata": {
        "description": "aks-subnet"
      }
    },
    "subnet2Prefix": {
      "type": "string",
      "defaultValue": "10.241.0.0/27",
      "metadata": {
        "description": "Persistence subnet"
      }
    },
    "subnet2Name": {
      "type": "string",
      "defaultValue": "persistence-subnet",
      "metadata": {
        "description": "persistence-subnet"
      }
    },
    "k8s_cluster_name":{
      "type": "string",
      "defaultValue": "WordpressSentiaAssessment",
      "metadata": {
        "description": "The name of the Azure Kubernetes Service Cluster"
      }
    },
    "kubernetesVersion": {
      "type": "string",
        "defaultValue": "1.14.7",
        "metadata": {
          "description": "The version of the Azure Kubernetes Service Cluster"
        }
    },
    // "dnsPrefix": {
    //   "type": "string",
    //   "metadata": {
    //       "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
    //   }
    // },
    "nodeCount": {
      "type": "int",
      "defaultValue": 4,
      "metadata": {
          "description": "The number of nodes that should be created along with the cluster."
      },
      "minValue": 1,
      "maxValue": 100
    },
    "agentVMSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      }
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "Client ID (used by cloudprovider)."
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "serviceCidr": {
      "type": "string",
        "metadata": {
            "description": "A CIDR notation IP range from which to assign service cluster IPs."
        },
        "defaultValue": "100.0.0.0/16"
    },
    "dnsServiceIP": {
      "type": "string",
        "metadata": {
          "description": "Containers DNS server IP address."
        },
        "defaultValue": "100.0.0.10"
    },
    "dockerBridgeCidr": {
      "type": "string",
      "metadata": {
          "description": "A CIDR notation IP for Docker bridge."
      },
      "defaultValue": "172.17.0.1/16"
    },
    "serverName": {
      "type": "string",
      "defaultValue": "WordpressSentiaAssessment",
      "metadata": {
          "description": "Server Name for Azure database for MySQL"
      }
    },
    "administratorLogin": {
      "type": "string",
      "minLength": 1,
      "metadata": {
          "description": "Database administrator login name"
      }
    },
    "administratorLoginPassword": {
      "type": "securestring",
      "minLength": 8,
      "metadata": {
          "description": "Database administrator password"
      }
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
          "description": "Azure database for MySQL compute capacity in vCores (2,4,8,16,32)"
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "GP_Gen5_2",
      "metadata": {
          "description": "Azure database for MySQL sku name "
      }
    },
    "SkuSizeMB": {
      "type": "int",
      "defaultValue": 5120,
      "metadata": {
          "description": "Azure database for MySQL Sku Size "
      }
    },
    "SkuTier": {
      "type": "string",
      "defaultValue": "GeneralPurpose",
      "metadata": {
          "description": "Azure database for MySQL pricing tier"
      }
    },
    "skuFamily": {
      "type": "string",
      "defaultValue": "Gen5",
      "metadata": {
          "description": "Azure database for MySQL sku family"
      }
    },
    "mysqlVersion": {
      "type": "string",
      "allowedValues": [
          "5.6",
          "5.7"
      ],
      "defaultValue": "5.7",
      "metadata": {
          "description": "MySQL version"
      }
    },
    "storageAutoGrow": {
      "type": "string",
      "defaultValue": "Disabled"
    },
    "backupRetentionDays": {
      "type": "int",
      "defaultValue": 7,
      "metadata": {
          "description": "MySQL Server backup retention days"
      }
    },
    "geoRedundantBackup": {
      "type": "string",
      "defaultValue": "Disabled",
      "metadata": {
          "description": "Geo-Redundant Backup setting"
      }
    },
    "virtualNetworkRuleName": {
      "type": "string",
      "defaultValue": "AllowAksSubnet",
      "metadata": {
        "description": "Virtual Network RuleName"
      }
    },
    "registryName": {
      "type": "string",
      "defaultValue": "WordpressSentiaAssessment",
      "metadata": {
          "description": "The name of the container registry."
      }
    },
    "registrySku": {
      "type": "string",
      "defaultValue": "Standard",
      "metadata": {
          "description": "The SKU of the container registry."
      }
    },
    "adminUserEnabled": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
          "description": "The value that indicates whether the admin user is enabled."
      }
    },
    "environmentName": {
      "type": "string",
      "metadata": {
        "description": "Environment name for tagging purposes, e.g. dev, accp, prod"
      }
    }
  },
  "variables": {
    "osDiskSizeGB": 1023,
    "osType": "Linux",
    "maxPods": 110,
    "networkPlugin": "azure",
    "firewallrules": {
      "batch": {
        "rules": [
          {
            "Name": "homeIpAdress",
            "StartIpAddress": "217.105.19.231",
            "EndIpAddress": "217.105.19.231"
          },
          {
            "Name": "aksSubnet",
            "StartIpAddress": "10.240.0.0",
            "EndIpAddress": "10.240.255.255"
          }
          // {
          //   "Name": "sentiaIpAddress",
          //   "StartIpAddress": "0.0.0.0",
          //   "EndIpAddress": "255.255.255.255"
          // }
        ]
      }
    }
  },
  "resources": [
    {
      "apiVersion": "2018-10-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "subnets": [
          {
            "name": "[parameters('subnet1Name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet1Prefix')]",
              "serviceEndpoints": [
                {
                  "service": "Microsoft.Sql",
                  "locations": "[parameters('location')]"
                }
              ]
            }   
          },
          {
            "name": "[parameters('subnet2Name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet2Prefix')]",
              "serviceEndpoints": [
                {
                  "service": "Microsoft.Storage",
                  "locations": "[parameters('location')]"
                },
                {
                  "service": "Microsoft.Sql",
                  "locations": "[parameters('location')]"
                }
              ]
            }
          }
        ],      
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        }
      },
      "tags": {
        "Environment": "[parameters('environmentName')]"
      }
    },
    {
      "apiVersion": "2019-06-01",
      "dependsOn": [
        "Microsoft.Network/virtualNetworks/AssessmentVNetTesting"
      ],
      "type": "Microsoft.ContainerService/managedClusters",
      "location":"[parameters('location')]",
      "name": "[concat(parameters('k8s_cluster_name'), '-aks')]",
      "properties":{
        "kubernetesVersion":"[parameters('kubernetesVersion')]",
        "enableRBAC": true,
        "dnsPrefix": "[concat(parameters('k8s_cluster_name'),'-dns')]",
        "masterProfile": {
          "count": 5,
          "dnsPrefix": "",
          "vmSize": "Standard_D2_v2",
          "availabilityProfile": "VirtualMachineScaleSets",
          "availabilityZones": [
              "1",
              "2"
          ]
        },
        "agentPoolProfiles":[
          {
            "name":"defaultpool",
            "osDiskSizeGB": "[variables('osDiskSizeGB')]",
            "count":"[parameters('nodeCount')]",
            "vmSize": "[parameters('agentVMSize')]",
            "osType": "[variables('osType')]",
            "storageProfile": "ManagedDisks",
            "type": "VirtualMachineScaleSets",
            "vnetSubnetID": "[resourceId(resourceGroup().Name,'Microsoft.Network/virtualNetworks/subnets',parameters('vnetName'),parameters('subnet1Name'))]",
            "maxPods": "[variables('maxPods')]",
            "availabilityZones": [
                "1",
                "2"
            ]
          }
        ],
        "servicePrincipalProfile": {
          "ClientId": "[parameters('servicePrincipalClientId')]",
          "Secret": "[parameters('servicePrincipalClientSecret')]"
        },
        "networkProfile": {
          "networkPlugin": "[variables('networkPlugin')]",
          "loadBalancerSku": "standard",
          "serviceCidr": "[parameters('serviceCidr')]",
          "dnsServiceIP": "[parameters('dnsServiceIP')]",
          "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]"
        }
      },
      "tags": {
        "Environment": "[parameters('environmentName')]"
      }
    },
    {
      "apiVersion": "2017-12-01",
      "type": "Microsoft.DBforMySQL/servers",
      "location": "[parameters('location')]",
      "name": "[concat(parameters('serverName'),'-db')]",
      "sku": {
        "name": "[parameters('skuName')]",
        "tier": "[parameters('skuTier')]",
        "capacity": "[parameters('skuCapacity')]",
        "size": "[parameters('skuSizeMB')]",
        "family": "[parameters('skuFamily')]"
      },
      "properties": {
        "version": "[parameters('mysqlVersion')]",
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
        "storageProfile":{
          "storageMB": "[parameters('skuSizeMB')]",
          "backupRetentionDays": "[parameters('backupRetentionDays')]",
          "geoRedundantBackup": "[parameters('geoRedundantBackup')]",
          "storageAutoGrow": "[parameters('storageAutoGrow')]"   
        },
        "sslEnforcement": "Disabled"
      },
      "tags": {
        "Environment": "[parameters('environmentName')]"
      },
      "resources":[
        {
          "name": "[parameters('virtualNetworkRuleName')]",
          "type": "virtualNetworkRules",
          "apiVersion": "2017-12-01",
          "properties": {
            "virtualNetworkSubnetId": "[resourceId(resourceGroup().Name,'Microsoft.Network/virtualNetworks/subnets',parameters('vnetName'),parameters('subnet1Name'))]",
            "ignoreMissingVnetServiceEndpoint": true
          },
          "dependsOn": [
            "Microsoft.DBforMySQL/servers/WordpressSentiaAssessment-db"
          ],
          "tags": {
            "Environment": "[parameters('environmentName')]"
          }
        } 
      ]  
    },
    {
      "name": "[concat(parameters('serverName'),'-db','/',variables('firewallrules').batch.rules[copyIndex()].Name)]",
      "type": "Microsoft.DBforMySQL/servers/firewallRules",
      "apiVersion": "2017-12-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "Microsoft.DBforMySQL/servers/WordpressSentiaAssessment-db"
      ],
      "copy": {
        "name": "firewallRulesCopy",
        "mode": "Serial",
        "batchSize": 1,
        "count": "[length(variables('firewallrules').batch.rules)]"
      },
      "properties":{
        "StartIpAddress": "[variables('firewallrules').batch.rules[copyIndex()].StartIpAddress]",
        "EndIpAddress": "[variables('firewallrules').batch.rules[copyIndex()].EndIpAddress]"
      },
      "tags": {
        "Environment": "[parameters('environmentName')]"
      }
    },
    {
      "name": "[parameters('registryName')]",
      "type": "Microsoft.ContainerRegistry/registries",
      "location": "[parameters('location')]",
      "apiVersion": "2017-10-01",
      "sku": {
          "name": "[parameters('registrySku')]"
      },
      "properties": {
          "adminUserEnabled": "[parameters('adminUserEnabled')]"
      }
    }
  ]
}

    


